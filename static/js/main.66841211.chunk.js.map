{"version":3,"sources":["context/ModalContext.js","context/ModalStateContext.js","components/PostContainer/hover-menu/details/Details.jsx","context/RemovePostContext.js","components/PostContainer/hover-menu/remove/Remove.jsx","components/PostContainer/hover-menu/edit/Edit.jsx","components/PostContainer/hover-menu/HoverMenu.jsx","components/PostContainer/single-post/SinglePost.jsx","components/PostContainer/post/Post.jsx","http/getPostByUserId.js","http/removePostByPostIds.js","context/GlobalContext.js","context/PostContext.js","components/PostContainer/posts/Posts.jsx","components/user/child/ChildUser.jsx","components/user/UserMenuContainer.jsx","local-data/findLocalParentById.js","components/PostContainer/hover-menu/details-modal/DetailsModal.jsx","App.jsx","index.js"],"names":["ModalContext","createContext","ModalContextProvider","children","useState","modalContext","setModalContext","Provider","value","updateModalContext","param","ModalStateContext","Consumer","ModalStateContextProvider","modalStateContext","setModalStateContext","updateModalStateContext","Details","post","useContext","className","onClick","RemovePostContext","RemovePostContextProvider","removePostContext","setRemovePostContext","updateRemovePostContext","Remove","postId","style","cursor","window","confirm","prev","Edit","HoverMenu","handleRemove","id","SinglePost","isMouseOver","setIsMouseOver","onMouseEnter","onMouseLeave","title","body","Post","setPosts","search","setSearch","filteredSearch","setFilteredSearch","useEffect","length","filterSearch","posts","filter","e","includes","toLocaleLowerCase","type","placeholder","onChange","target","handleInput","map","getPostByUserId","userId","a","url","fetch","response","json","parsedResponse","removePostByPostIds","postIds","statusCodes","eachPostId","method","status","GlobalState","GlobalStateProvider","state","setState","updateState","PostState","PostStateProvider","postState","setPostState","updatePostState","Posts","hasPostInPostState","useCallback","idToFind","some","populatePosts","givenId","then","filtered","i","console","log","catch","ChildUser","parentId","userName","UserMenuContainer","userData","name","populateParent","DetailsModal","class","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.66841211.chunk.js","sourcesContent":["import React, { useState, createContext } from 'react';\n\nconst ModalContext = createContext(false);\n\nconst ModalContextProvider = ({ children }) => {\n  const [modalContext, setModalContext] = useState(false);\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalContext,\n        updateModalContext: (param) => setModalContext(param),\n      }}\n    >\n      {children}\n    </ModalContext.Provider>\n  );\n};\n\nconst ModalContextConsumer = ModalContext.Consumer;\n\nexport { ModalContextProvider, ModalContextConsumer, ModalContext };\n","import React, { useState, createContext } from 'react';\n\nconst ModalStateContext = createContext(false);\n\nconst ModalStateContextProvider = ({ children }) => {\n  const [modalStateContext, setModalStateContext] = useState(false);\n\n  return (\n    <ModalStateContext.Provider\n      value={{\n        modalStateContext,\n        updateModalStateContext: (param) => setModalStateContext(param),\n      }}\n    >\n      {children}\n    </ModalStateContext.Provider>\n  );\n};\n\nconst ModalStateContextConsumer = ModalStateContext.Consumer;\n\nexport {\n  ModalStateContextProvider,\n  ModalStateContextConsumer,\n  ModalStateContext,\n};\n","import './details.scss';\nimport React, { useContext } from 'react';\nimport { ModalContext } from '../../../../context/ModalContext';\nimport { ModalStateContext } from '../../../../context/ModalStateContext';\n\nexport const Details = ({ post }) => {\n  const { updateModalContext } = useContext(ModalContext);\n  const { updateModalStateContext } = useContext(ModalStateContext);\n\n  const handleClick = () => {\n    updateModalContext(true);\n    updateModalStateContext(post);\n  };\n\n  return (\n    <div>\n      <li className=\"detail\" onClick={() => handleClick()}>\n        Details\n      </li>\n    </div>\n  );\n};\n","import React, { useState, createContext } from 'react';\n\nconst RemovePostContext = createContext([]);\n\nconst RemovePostContextProvider = ({ children }) => {\n  const [removePostContext, setRemovePostContext] = useState([]);\n\n  return (\n    <RemovePostContext.Provider\n      value={{\n        removePostContext,\n        updateRemovePostContext: (param) => setRemovePostContext(param),\n      }}\n    >\n      {children}\n    </RemovePostContext.Provider>\n  );\n};\n\nconst RemovePostContextConsumer = RemovePostContext.Consumer;\n\nexport {\n  RemovePostContextProvider,\n  RemovePostContextConsumer,\n  RemovePostContext,\n};\n","import React, { useContext } from 'react';\nimport { RemovePostContext } from '../../../../context/RemovePostContext';\n\nexport const Remove = ({ postId }) => {\n  const { updateRemovePostContext } = useContext(RemovePostContext);\n\n  const confirmFunc = () => {\n    if (window.confirm('Are you sure?')) {\n      updateRemovePostContext((prev) => [...prev, postId]);\n    }\n  };\n\n  return (\n    <div style={{ cursor: 'pointer' }} onClick={() => confirmFunc()}>\n      Remove\n    </div>\n  );\n};\n","import React from 'react';\nimport './edit.scss';\n\nexport const Edit = () => {\n  return <div className=\"edit-button\">Edit</div>;\n};\n","import React from 'react';\nimport { Details } from './details/Details';\nimport './hover-menu.scss';\nimport { Remove } from './remove/Remove';\nimport { Edit } from './edit/Edit';\n\nexport const HoverMenu = ({ post, handleRemove }) => {\n  return (\n    <div className=\"hover-menu-container\">\n      <ul>\n        <li>{post.id}</li>\n        <Details post={post} />\n        <Edit />\n        <Remove postId={post.id} />\n      </ul>\n    </div>\n  );\n};\n","import { HoverMenu } from '../hover-menu/HoverMenu';\nimport { useState } from 'react';\nimport './single-post.scss';\n\nexport const SinglePost = ({ post }) => {\n  const [isMouseOver, setIsMouseOver] = useState(false);\n\n  return (\n    <ul\n      id={post.id}\n      className=\"post-ul\"\n      onMouseEnter={() => setIsMouseOver(true)}\n      onMouseLeave={() => setIsMouseOver(false)}\n    >\n      <li className=\"single-post-title\">{post.title}</li>\n      <li className=\"single-post-body\">{post.body}</li>\n      {isMouseOver ? <HoverMenu post={post} /> : null}\n    </ul>\n  );\n};\n","import './post.scss';\n\nimport { SinglePost } from '../single-post/SinglePost';\nimport { useEffect, useState } from 'react';\n\nexport const Post = ({ post, setPosts }) => {\n  const [search, setSearch] = useState('');\n  const [filteredSearch, setFilteredSearch] = useState();\n\n  const handleInput = (e) => {\n    setSearch(e.target.value);\n  };\n\n  useEffect(() => {\n    if (search.length > 2) {\n      const filterSearch = post.posts.filter((e) =>\n        e.title.includes(search.toLocaleLowerCase())\n      );\n      setFilteredSearch(filterSearch);\n    }\n  }, [search]);\n\n  return (\n    <div className=\"post-container\">\n      <input\n        className=\"search-box\"\n        type=\"search\"\n        value={search}\n        placeholder=\"Search\"\n        onChange={(e) => handleInput(e)}\n      />\n      {search.length > 2\n        ? filteredSearch\n          ? filteredSearch.map((e) => <SinglePost key={e.id} post={e} />)\n          : null\n        : post.posts.map((e) => <SinglePost key={e.id} post={e} />)}\n    </div>\n  );\n};\n","export const getPostByUserId = async (userId) => {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n\n  const response = await fetch(url);\n  const parsedResponse = await response.json();\n\n  return parsedResponse;\n};\n","export const removePostByPostIds = async (postIds) => {\n  const statusCodes = postIds.map(async (eachPostId) => {\n    const url = `https://jsonplaceholder.typicode.com/posts/${eachPostId}`;\n    const response = await fetch(url, { method: 'DELETE' });\n    return response.status;\n  });\n\n  return statusCodes;\n};\n","import React, { useState, createContext } from 'react';\n\nconst GlobalState = createContext(null);\n\nconst GlobalStateProvider = ({ children }) => {\n  const [state, setState] = useState([1]);\n\n  return (\n    <GlobalState.Provider\n      value={{ state, updateState: (param) => setState(param) }}\n    >\n      {children}\n    </GlobalState.Provider>\n  );\n};\n\nconst GlobalStateConsumer = GlobalState.Consumer;\n\nexport { GlobalStateProvider, GlobalStateConsumer, GlobalState };\n","import React, { useState, createContext } from 'react';\n\nconst PostState = createContext(null);\n\nconst PostStateProvider = ({ children }) => {\n  const [postState, setPostState] = useState([]);\n\n  return (\n    <PostState.Provider\n      value={{ postState, updatePostState: (param) => setPostState(param) }}\n    >\n      {children}\n    </PostState.Provider>\n  );\n};\n\nconst PostStateConsumer = PostState.Consumer;\n\nexport { PostStateProvider, PostStateConsumer, PostState };\n","import './posts.scss';\nimport { Post } from '../post/Post';\nimport { getPostByUserId } from '../../../http/getPostByUserId';\nimport { removePostByPostIds } from '../../../http/removePostByPostIds';\nimport { useState, useEffect, useContext, useCallback } from 'react';\nimport { GlobalState } from '../../../context/GlobalContext';\nimport { PostState } from '../../../context/PostContext';\nimport { RemovePostContext } from '../../../context/RemovePostContext';\n\nexport const Posts = () => {\n  // Global states\n  const { state } = useContext(GlobalState);\n  const { postState, updatePostState } = useContext(PostState);\n  const { removePostContext, updateRemovePostContext } = useContext(\n    RemovePostContext\n  );\n\n  // Local states\n\n  const [posts, setPosts] = useState([]);\n\n  // Check if post is already in local state\n  const hasPostInPostState = useCallback(\n    (idToFind) => postState.some((e) => e.id === idToFind),\n    [postState]\n  );\n\n  // Get posts\n  const populatePosts = useCallback(\n    (givenId) => {\n      if (hasPostInPostState(givenId)) {\n        setPosts(postState.filter((e) => e.id === givenId));\n      } else {\n        getPostByUserId(givenId).then((e) =>\n          updatePostState([...postState, { id: e[0].userId, posts: [...e] }])\n        );\n      }\n    },\n    [postState, hasPostInPostState, updatePostState]\n  );\n\n  // Handle rendering\n  useEffect(() => {\n    populatePosts(state);\n  }, [state, postState, populatePosts]);\n\n  // Remove post from state\n  useEffect(() => {\n    if (posts.map((e) => e.posts)[0]) {\n      const filtered = posts\n        .map((e) => e.posts)[0]\n        .filter((e) => !removePostContext.includes(e.id));\n      setPosts([{ id: state, posts: filtered }]);\n    }\n  }, [removePostContext]);\n\n  // Remove posts from server\n  const handleRemove = () => {\n    removePostByPostIds(removePostContext)\n      .then((e) => console.log(`removed post by ids: ${removePostContext}`))\n      .catch((e) => console.log(e));\n    updateRemovePostContext([]);\n  };\n\n  return (\n    <div className=\"posts-container\">\n      {posts.map((e, i) => (\n        <Post key={i} post={e} setPosts={setPosts} />\n      ))}\n      <button className=\"save-button\" onClick={() => handleRemove()}>\n        Save\n      </button>\n    </div>\n  );\n};\n","import React, { useContext, useEffect } from 'react';\nimport './child-user.scss';\nimport { GlobalState } from '../../../context/GlobalContext';\n\nexport const ChildUser = ({ parentId, userName }) => {\n  const { updateState } = useContext(GlobalState);\n\n  //Initial api call\n  useEffect(() => {\n    updateState(parentId);\n  }, []);\n\n  return (\n    <button\n      className=\"child-user-container\"\n      id={parentId}\n      onClick={() => updateState(parentId)}\n    >\n      {userName}\n    </button>\n  );\n};\n","import React from 'react';\nimport { ChildUser } from './child/ChildUser';\nimport { findLocalParentById } from '../../local-data/findLocalParentById';\nimport './user-menu-container.scss';\n\nconst UserMenuContainer = () => {\n  const populateParent = () =>\n    findLocalParentById(null).map((e, i) => (\n      <ChildUser key={e.id} parentId={e.id} userName={e.name} />\n    ));\n\n  return <section className=\"user-menu-container\">{populateParent()}</section>;\n};\n\nexport default UserMenuContainer;\n","import userData from './users.json';\n\nexport function findLocalParentById(id) {\n  return userData.filter((e) => e.parentId === id);\n}\n","import React, { useContext } from 'react';\nimport './details-modal.scss';\nimport { ModalContext } from '../../../../context/ModalContext';\nimport { ModalStateContext } from '../../../../context/ModalStateContext';\n\nexport const DetailsModal = ({ children }) => {\n  const { modalContext, updateModalContext } = useContext(ModalContext);\n  const { modalStateContext, updateModalStateContext } = useContext(\n    ModalStateContext\n  );\n  if (!modalContext) return null;\n\n  const handleDetails = () => {\n    updateModalContext(false);\n    updateModalStateContext({});\n  };\n\n  return (\n    <div className=\"modal\">\n      {children}\n      <div className=\"modal-container\">\n        <ul>\n          <li className=\"details-modal-header\">Post Details</li>\n          <li class=\"modal-title\">{modalStateContext.title}</li>\n          <li>{modalStateContext.body}</li>\n          <button className=\"close-button\" onClick={() => handleDetails()}>\n            Close\n          </button>\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import './app.scss';\nimport { Posts } from './components/PostContainer/posts/Posts';\nimport UserMenuContainer from './components/user/UserMenuContainer';\nimport { GlobalStateProvider } from './context/GlobalContext';\nimport { ModalContextProvider } from './context/ModalContext';\nimport { PostStateProvider } from './context/PostContext';\nimport { RemovePostContextProvider } from './context/RemovePostContext';\nimport { DetailsModal } from './components/PostContainer/hover-menu/details-modal/DetailsModal';\nimport { ModalStateContextProvider } from './context/ModalStateContext';\n\nfunction App() {\n  return (\n    <GlobalStateProvider>\n      <PostStateProvider>\n        <RemovePostContextProvider>\n          <ModalContextProvider>\n            <ModalStateContextProvider>\n              <div className=\"app\">\n                <UserMenuContainer />\n                <Posts />\n                <DetailsModal></DetailsModal>\n              </div>\n            </ModalStateContextProvider>\n          </ModalContextProvider>\n        </RemovePostContextProvider>\n      </PostStateProvider>\n    </GlobalStateProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}